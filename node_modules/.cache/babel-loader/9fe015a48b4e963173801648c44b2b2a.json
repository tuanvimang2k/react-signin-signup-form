{"ast":null,"code":"import axios from \"axios\";\nimport { CheckLogin, CheckToken } from \"./Helper\";\nimport { useNavigate } from \"react-router-dom\";\nexport const HandleSignIn = async (username, password) => {\n  const _body = {\n    email: username,\n    password: password\n  };\n\n  try {\n    const loginResponse = await CheckLogin(_body);\n    console.log(\"Login response:\", loginResponse.status);\n\n    if (loginResponse.status === 1) {\n      // Đăng nhập thành công, kiểm tra token\n      const tokenResponse = await CheckToken(loginResponse.token);\n      console.log(\"Token response:\", tokenResponse); // Kiểm tra tokenResponse và thực hiện các bước cần thiết\n\n      if (tokenResponse && tokenResponse.success === true) {\n        // Token hợp lệ, chuyển hướng đến \"/my-chart\"\n        // navigate(\"/my-chart\");\n        return true;\n      } else {\n        // Token không hợp lệ hoặc có lỗi khác, xử lý theo nhu cầu của bạn\n        console.error(\"Invalid token or other error:\", tokenResponse);\n      }\n    } else {\n      // Đăng nhập không thành công, xử lý theo nhu cầu của bạn\n      console.error(\"Login unsuccessful:\", loginResponse);\n    }\n  } catch (error) {\n    console.error(\"Error during login:\", error);\n  }\n};\n_c = HandleSignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleSignIn\");","map":{"version":3,"names":["axios","CheckLogin","CheckToken","useNavigate","HandleSignIn","username","password","_body","email","loginResponse","console","log","status","tokenResponse","token","success","error"],"sources":["D:/github/react-signin-signup-form/src/Service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { CheckLogin,CheckToken } from \"./Helper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport const HandleSignIn = async (username,password) => {\r\n    const _body = {\r\n        email: username,\r\n        password: password,\r\n    };\r\n    try {\r\n        const loginResponse = await CheckLogin(_body);\r\n        console.log(\"Login response:\", loginResponse.status);\r\n        if (loginResponse.status === 1) {\r\n            // Đăng nhập thành công, kiểm tra token\r\n            const tokenResponse = await CheckToken(loginResponse.token);\r\n            console.log(\"Token response:\", tokenResponse);\r\n            \r\n            // Kiểm tra tokenResponse và thực hiện các bước cần thiết\r\n            if (tokenResponse && tokenResponse.success === true) {\r\n                // Token hợp lệ, chuyển hướng đến \"/my-chart\"\r\n                // navigate(\"/my-chart\");\r\n                return true;\r\n            } else {\r\n                // Token không hợp lệ hoặc có lỗi khác, xử lý theo nhu cầu của bạn\r\n                console.error(\"Invalid token or other error:\", tokenResponse);\r\n            }\r\n        } else {\r\n            // Đăng nhập không thành công, xử lý theo nhu cầu của bạn\r\n            console.error(\"Login unsuccessful:\", loginResponse);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error during login:\", error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAoBC,UAApB,QAAsC,UAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;EACrD,MAAMC,KAAK,GAAG;IACVC,KAAK,EAAEH,QADG;IAEVC,QAAQ,EAAEA;EAFA,CAAd;;EAIA,IAAI;IACA,MAAMG,aAAa,GAAG,MAAMR,UAAU,CAACM,KAAD,CAAtC;IACAG,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,aAAa,CAACG,MAA7C;;IACA,IAAIH,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;MAC5B;MACA,MAAMC,aAAa,GAAG,MAAMX,UAAU,CAACO,aAAa,CAACK,KAAf,CAAtC;MACAJ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,aAA/B,EAH4B,CAK5B;;MACA,IAAIA,aAAa,IAAIA,aAAa,CAACE,OAAd,KAA0B,IAA/C,EAAqD;QACjD;QACA;QACA,OAAO,IAAP;MACH,CAJD,MAIO;QACH;QACAL,OAAO,CAACM,KAAR,CAAc,+BAAd,EAA+CH,aAA/C;MACH;IACJ,CAdD,MAcO;MACH;MACAH,OAAO,CAACM,KAAR,CAAc,qBAAd,EAAqCP,aAArC;IACH;EACJ,CArBD,CAqBE,OAAOO,KAAP,EAAc;IACZN,OAAO,CAACM,KAAR,CAAc,qBAAd,EAAqCA,KAArC;EACH;AACJ,CA7BM;KAAMZ,Y"},"metadata":{},"sourceType":"module"}